name: CI devops 2024
on:
  #to begin you want to launch this job in main and develop
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-22.04
    steps:
     #checkout your github code using actions/checkout@v2.5.0
      - uses: actions/checkout@v2.5.0

     #do the same with another action (actions/setup-java@v3) that enable to setup jdk 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

     #finally build your app with the latest command
      - name: Build and test with Maven
        env:

            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=StritanS_devops-livecoding -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./simple-api/pom.xml


  build-and-push-docker-image:
    # Specifies the environment to run the job on (Ubuntu 22.04)
    runs-on: ubuntu-22.04
    # No dependency here, as this workflow is triggered after the completion of the first workflow.

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        # Use the 'checkout' action to retrieve the code from the repository
        uses: actions/checkout@v2

      # Step 2: Docker Login
      - name: Login to DockerHub
        # Login to DockerHub using credentials stored in GitHub Secrets
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}

      # Step 3: Build and Push the Backend Docker Image
      - name: Build image and push backend
        # Use the 'docker/build-push-action' to build and push the backend Docker image
        uses: docker/build-push-action@v3
        with:
          # Set the context (path to the Dockerfile and necessary files for the backend)
          context: ./simple-api
          # Tag the image with the DockerHub username and the 'latest' tag
          tags: ${{ secrets.DOCKER_USERNAME }}/tp-devops-simple-api:latest
          # Push the image to Docker after building it
          push: true

      # Step 4: Build and Push the Database Docker Image
      - name: Build image and push database
        # Use the 'docker/build-push-action' to build and push the database Docker image
        uses: docker/build-push-action@v3
        with:
          # Set the context (path to the Dockerfile and necessary files for the database)
          context: ./database
          # Tag the image with the Docker username and the 'latest' tag
          tags: ${{ secrets.DOCKER_USERNAME }}/tp-devops-database:latest
          # Push the image to Docker after building it
          push: true

      # Step 5: Build and Push the HTTP Server Docker Image
      - name: Build image and push httpd
        # Use the 'docker/build-push-action' to build and push the HTTP server Docker image
        uses: docker/build-push-action@v3
        with:
          # Set the context (path to the Dockerfile and necessary files for the HTTP server)
          context: ./http-server
          # Tag the image with the Docker username and the 'latest' tag
          tags: ${{ secrets.DOCKER_USERNAME }}/tp-devops-httpd:latest
          # Push the image to Docker after building it
          push: true